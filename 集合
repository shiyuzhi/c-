#include <vector>    
#include <sstream>    
#include <string>    
    
using namespace std;    
  
  
class IntegerSet {  
    friend ostream& operator<<( ostream&, const IntegerSet&);  
public:  
    IntegerSet() { emptySet(); } //constructor 建構函數  
    void emptySet(){  
        for(int i=0;i<101;i++)  
        {  
            set[i]=0;  
        }  
    } //將集合清為空集合  
      
    void insertElement( int input)  
    {  
     if(validEntry(input))  
     {  
         set[input]=1;  
     }  
    } //加入一個新元素加入前應使用validEntry函數  
    //檢查參數合理才加入  
    void deleteElement( int input)  
    {  
     if(validEntry(input))  
     {  
         set[input]=0;  
     }  
    } //從集合中刪除參數所表示的元素  
      
    IntegerSet operator|( IntegerSet other)  
    {  
        IntegerSet a;  
        for(int i=0;i<101;i++)  
        {  
            if(this->set[i] != 0 || other.set[i] !=0)  
            {  
                a.set[i]=1;  
            }  
            else  
            {  
                a.set[i]=0;  
            }  
        }  
        return a;  
    }//求兩集合的聯集  
      
    IntegerSet operator&(IntegerSet other)  
    {  
        IntegerSet b;  
        for(int i=0;i<101;i++)  
        {  
            if(this->set[i] != 0 && other.set[i] !=0)  
            {  
                b.set[i]=1;  
            }  
            else  
            {  
                b.set[i]=0;  
            }  
        }  
        return b;  
    }//求兩集合的交集  
      
private:  
    int set[ 101 ]; //以array表示集合如{2, 5,77}則  
    //set[2]=1,set[5]=1,set[77]=1其餘為0  
    bool validEntry( int x ) { return x >= 0 && x <= 100; }  
    //檢查參數x 是否介於0~100間是的話傳回TRUE否則傳回FALSE  
};  
ostream& operator<<( ostream& o, const IntegerSet& s)  //以{3, 7, 9, 77}的格式輸出集合的內容  
{  
   int n=0;  
   for(int i=0;i<101;i++)  
   {  
       if(s.set[i]==1)  
       {  
           n++;  
       }  
   }  
     
   if(n==0)  
   {  
       o << "Empty";  
       return o;  
   }  
     
   o<<"{";  
   for(int i=0;i<101;i++)  
   {  
       if(s.set[i] !=0)  
       {  
           o<<i;  
           if(n>1)  
           {  
               o<<",";  
               n--;  
           }  
       }  
   }  
   o<<"}";  
   return o;  
}  
  
const vector<string> split(const string &str,const char &delimiter)  
{  
    vector<string> r;  
    stringstream s(str);  
    string t;  
      
    while(getline(s,t,delimiter))  
    {  
        r.push_back(t);  
    }  
    return r;  
}  
  
int main()  
{  
    string str1,str2;  
    getline(cin,str1);  
      
    IntegerSet set1,set2;  
    vector<string> ret=split(str1,' ');  
    for(auto& ss:ret)  
    {  
        set1.insertElement(stoi(ss));  
    }  
      
    getline(cin,str2);  
      
    ret=split(str2,' ');  
    for(auto& ss:ret)  
    {  
        set2.insertElement(stoi(ss));  
    }  
      
    cout<<(set1 | set2)<<endl;  
    cout<<(set1 & set2)<<endl;  
      
    return 0;  
      
}  
